"TestBazel monorepo, testing everything :)"

module(
    name = "testbazel",
    version = "0.0.0",
)

# Rust configuration
bazel_dep(name = "rules_rust", version = "0.61.0")

RUST_EDITION = "2024"

RUST_VERSION = "1.87.0"

rust = use_extension("@rules_rust//rust:extensions.bzl", "rust")
rust.toolchain(
    edition = RUST_EDITION,
    versions = [RUST_VERSION],
)
use_repo(rust, "rust_toolchains")

register_toolchains("@rust_toolchains//:all")

crate = use_extension("@rules_rust//crate_universe:extension.bzl", "crate")

# External crates
crate.spec(
    package = "axum",
    version = "0.8.4",
)
crate.spec(
    package = "tokio",
    version = "1.45.1",
    features = [
        "full",
    ],
)
crate.spec(
    package = "tower",
    version = "0.5.2",
)
crate.from_specs()
use_repo(crate, "crates")

# Node/pnpm configuration
bazel_dep(name = "aspect_bazel_lib", version = "2.17.1")
bazel_dep(name = "aspect_rules_lint", version = "1.4.4")
bazel_dep(name = "aspect_rules_js", version = "2.3.7")
bazel_dep(name = "aspect_rules_ts", version = "3.6.0")
bazel_dep(name = "aspect_rules_rollup", version = "2.0.1")
bazel_dep(name = "aspect_rules_swc", version = "2.4.3")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "rules_nodejs", version = "6.4.0")

node = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node", dev_dependency = True)
node.toolchain(node_version = "22.15.1")
use_repo(node, "nodejs_toolchains")

pnpm = use_extension("@aspect_rules_js//npm:extensions.bzl", "pnpm")
use_repo(pnpm, "pnpm")
pnpm.pnpm(pnpm_version = "10.9.0")

npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm")
npm.npm_translate_lock(
    name = "npm",
    npmrc = "//:.npmrc",
    pnpm_lock = "//:pnpm-lock.yaml",
    verify_node_modules_ignored = "//:.bazelignore",
)
use_repo(npm, "npm")

rules_ts_ext = use_extension(
    "@aspect_rules_ts//ts:extensions.bzl",
    "ext",
    dev_dependency = True,
)
rules_ts_ext.deps()
use_repo(rules_ts_ext, "npm_typescript")
